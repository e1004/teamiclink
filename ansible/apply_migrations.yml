---
- hosts: servers
  become: true

  tasks:
    - name: compress migrations locally
      delegate_to: localhost
      archive:
        path: "{{ playbook_dir }}/../migrations"
        dest: "{{ playbook_dir }}/../migrations.tar"
        format: tar

    - name: ensure migrations directory exists on remote host
      file:
        path: /tmp
        state: directory

    - name: unarchive migrations
      unarchive:
        src: "{{ playbook_dir }}/../migrations.tar"
        dest: /tmp

    - name: replace bot creation SQL
      copy:
        content: "CREATE USER robot PASSWORD '{{ db.bot_password }}';"
        dest: /tmp/migrations/000003_create_user_robot.up.sql

    - name: apply migrations
      community.general.docker_container:
        name: migrator
        image: migrate/migrate:v4.13.0
        # https://github.com/golang-migrate/migrate/tree/master/cmd/migrate#usage
        command: "-database {{ postgres.url }} -path /migrations/ {{ command }}"
        volumes:
          - /tmp/migrations:/migrations
        networks:
          - name: postgres-net
        networks_cli_compatible: true
        network_mode: bridge
        detach: false
        cleanup: true
        container_default_behavior: no_defaults

    - name: delete local compressed migrations
      delegate_to: localhost
      file:
        path: "{{ playbook_dir }}/../migrations.tar"
        state: absent

    - name: delete migrations on remote host
      file:
        path: /tmp/migrations
        state: absent
